{"version":3,"sources":["../../../ttt/ttt/src/gridTopN.js","../../../ttt/ttt/src/index.js"],"names":["Demo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","columns","name","title","rows","nextProps","gridValuesTopNGrid","setState","_this$state","react","Paper","dx_react_grid_material_ui_es","React","App","number","value","showGrid","GridFont","topNdata","handleChange","bind","assertThisInitialized","handleClick","event","target","_this2","value_n","data","topnvalue","console","dir","fetch","method","headers","Content-Type","Accept","body","JSON","stringify","then","response","json","log","topNData","tableValues","count","i","push","ID","Word","Frequency","react_default","a","createElement","className","type","placeholder","onChange","onClick","src_TopNGrid","gridValuesApp","Component","TopNGrid","gridTopN_Demo","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3032c7d8.chunk.js","sourcesContent":["import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  Grid,\n  Table,\n  TableHeaderRow,\n} from '@devexpress/dx-react-grid-material-ui';\n\nexport default class Demo extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        columns: [\n            { name: 'ID', title: '#' },\n            { name: 'Word', title: 'Word' },\n            { name: 'Frequency', title: 'Frequency' },\n          ],\n        rows: []\n        };\n  }\n\ncomponentWillReceiveProps(nextProps){\n    if(nextProps.gridValuesTopNGrid !== this.props.gridValuesTopNGrid){\n        // console.log(nextProps.gridValuesTopNGrid);\n        // console.log(this.props.gridValuesTopNGrid);\n        this.setState({rows: nextProps.gridValuesTopNGrid});\n    }\n\n}\n  render() {\n    //   console.log(this.props.gridValuesTopNGrid)\n    const { rows, columns } = this.state;\n    return (\n        < Paper>\n            <Grid\n                rows={rows}\n                columns={columns}\n                >\n            <Table />\n            <TableHeaderRow />\n            </Grid>\n        </Paper>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport Demo from './gridTopN';\n\n\nclass App extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            number: 0,\n            value: '',\n            showGrid: false,\n            GridFont: false,\n            topNdata: []\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n  handleChange(event){\n    this.setState({number: event.target.value});\n  }\n  \n  handleClick(){\n      var value_n = this.state.number;\n      var data = {topnvalue: value_n};\n      console.dir(value_n);\n      fetch('http://localhost:9000/logicapi/topn', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json, text/plain, */*',\n        },  \n        body: JSON.stringify(data)\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response);\n        var topNData = {\n            tableValues: []\n        };\n        \n        var count = 1;\n        for(var i in response){\n            topNData.tableValues.push({\n                ID: count,\n                Word: i,\n                Frequency: response[i]\n            });\n            count++;\n          }\n          this.setState({topNdata: topNData});\n          //console.log(this.state.topNdata);\n          \n    });\n\n\n\n    this.setState({ showGrid: true });\n    this.setState({GridFont: true});\n \n  }\n\n  render(){\n\n    return(\n          <div className=\"container col-md-12 main-container row\">\n            <div className=\"col-md-6 valueContainer\">\n                <span className=\"ttt_font_logo\">ttt</span><span className=\"ttt_font_c\"> challenge</span>\n                <div className=\"valueBoxContainer\">\n                    <span className=\"ttt_font_valueContainer\">top n most frequently occurring words </span>\n                    <div className=\"valueContainerInner\">\n                        <div className=\"textbox-container\">\n                            <input className=\"textbox\" type=\"number\" placeholder=\"enter value for n\" onChange={this.handleChange}></input>\n                        </div>\n                        <div className=\"submitBtn-container\">\n                            <input type=\"button\" className=\"btn btn-primary submitBtn\" value=\"submit\" onClick={this.handleClick} ></input>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-md-6 gridContainer\">\n                <div className={\"hide-\"+this.state.GridFont}>\n                    <div className=\"ttt_font_gridContainer \">\n                        <span className=\"ttt_font_grid\">your grid appears here</span>\n                    </div>\n                </div>\n                {this.state.showGrid ? <TopNGrid gridValuesApp = {this.state.topNdata}/> : null}\n                {/* {console.log(this.state.topNdata)} */}\n        \n            </div>\n          </div>\n      );\n  }\n\n}\n\nclass TopNGrid extends React.Component{\n    \n    render(){      \n        return(\n            <div className=\"gridContainerInner\">\n                <Demo gridValuesTopNGrid = {this.props.gridValuesApp.tableValues}/> \n                {/* {console.log(this.props.gridValuesApp.tableValues)} */}\n            </div>\n        );\n    }\n\n}\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}